p_3_no20 <- ggplot(data = aeropuerto_no20, aes(x = population, y = distance)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1_no20, p_2_no20, p_3_no20, ncol = 2, nrow = 2)
airport_no20 <- seq(1, 21, 1)
revenue_no20 <- c(233, 272, 253, 296, 268, 296, 276, 235, 253, 233, 240, 267, 338, 243, 252, 269, 242, 233, 234, 340, 200)
distance_no20 <- c(233, 209, 206, 232, 125, 245, 213, 134, 140, 165, 234, 205, 214, 183, 230, 238, 144, 220, 170, 290, 340)
population_no20 <- c(56, 74, 67, 78, 73, 54, 100, 98, 95, 81, 52, 96, 96, 73, 55, 91, 64, 60, 60, 70, 75)
#lit <- list(airport, revenue, distance, population)
#lapply(FUN = length, X = lit)
aeropuerto_no20 <- data.frame(airport_no20, revenue_no20, distance_no20, population_no20)
p_1_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Distance")
p_2_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = population_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Population")
p_3_no20 <- ggplot(data = aeropuerto_no20, aes(x = population_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1_no20, p_2_no20, p_3_no20, ncol = 2, nrow = 2)
no20_model <- lm(revenue_no20 ~ population_no20 + distance_no20, data = aeropuerto_no20)
summary(no20_model)
coef_pop_no20 <- summary(no20_model)$coefficients[2,1]
err_pop_no20 <- summary(no20_model)$coefficients[2,2]
coef_dist_no20 <- summary(no20_model)$coefficients[3,1]
err_dist_no20 <- summary(no20_model)$coefficients[3,2]
round(coef_pop_no20 + -1*err_pop_no20*qt(0.975, 19), 4)
round(coef_pop_no20 + 1*err_pop_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + -1*err_dist_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + 1*err_dist_no20*qt(0.975, 19), 4)
coef_pop <- summary(aero_model)$coefficients[2,1]
err_pop <- summary(aero_model)$coefficients[2,2]
coef_dist <- summary(aero_model)$coefficients[3,1]
err_dist <- summary(aero_model)$coefficients[3,2]
round(coef_pop + -1*err_pop*qt(0.975, 19), 4)
round(coef_pop + 1*err_pop*qt(0.975, 19), 4)
round(coef_dist + -1*err_dist*qt(0.975, 19), 4)
round(coef_dist + 1*err_dist*qt(0.975, 19), 4)
library(tidyverse)
library(gridExtra)
library(lmtest)
dose_level <- c(rep(2, 3), rep(4, 2), rep(8,2), rep(16, 3), rep(32,2), rep(64,3))
response <- c(5, 7, 3, 10, 14, 15, 17, 20, 21, 19, 23, 29, 28, 31, 30)
drugs_df <- data.frame(dose_level, response)
drugs_lm <- lm(response ~ dose_level, data = drugs_df)
drugs_lm
ggplot(data = drugs_df, aes(x = dose_level, y = response)) +
geom_jitter() +
geom_smooth(method = "lm")
summary(drugs_lm)
summary(aov(drugs_lm))
r <- sqrt(0.7394)
paste("r = ", round(r, 4))
coef <- summary(drugs_lm)$coefficients[2,1]
err <- summary(drugs_lm)$coefficients[2,2]
paste0("We are 95% confident that the slope coefficeint in this linear model is between ",
round(coef + -1*err*qt(0.975, 13), 4), " and ", round(coef + 1*err*qt(0.975, 13), 4), ".")
paste0("With a p-value of 2.41x106{-5}, dose is a significant predictor of protective strength of the drug.")
paste("r = ", round(r, 4))
y <- quantile(drugs_lm$residuals[!is.na(drugs_lm$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = drugs_lm, aes(x = drugs_lm$residuals)) +
geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = drugs_lm, aes(x = drugs_lm$fitted.values,
y = drugs_lm$residuals)) +
geom_jitter() +
xlab("Group Mean") +
ylab("Residuals") +
ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = drugs_lm) + stat_qq(aes(sample = drugs_lm$residuals),
alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") +
ggtitle("Q-Q Plot")
res_sum <- as.table(summary(drugs_lm$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
full_model <- lm(response ~ 0 + factor(dose_level), data = drugs_df)
fuller_model <- aov(full_model)
summary(fuller_model)
reduced <- aov(drugs_lm)
summary(aov(drugs_lm))
lackOfFit <- anova(drugs_lm, full_model)
lackOfFit$`Pr(>F)`
paste0("with a p-value of ", lackOfFit$`Pr(>F)`[2], " we have enough evidence to suggest there is a lack of fit with the linear model")
airport <- seq(1, 22, 1)
revenue <- c(233, 272, 253, 296, 268, 296, 276, 235, 253, 233, 240, 267, 338, 243, 252, 269, 242, 233, 234, 450, 340, 200)
distance <- c(233, 209, 206, 232, 125, 245, 213, 134, 140, 165, 234, 205, 214, 183, 230, 238, 144, 220, 170, 170, 290, 340)
population <- c(56, 74, 67, 78, 73, 54, 100, 98, 95, 81, 52, 96, 96, 73, 55, 91, 64, 60, 60, 240, 70, 75)
#lit <- list(airport, revenue, distance, population)
#lapply(FUN = length, X = lit)
aeropuerto <- data.frame(airport, revenue, distance, population)
p_1 <- ggplot(data = aeropuerto, aes(x = revenue, y = distance)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Distance")
p_2 <- ggplot(data = aeropuerto, aes(x = revenue, y = population)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Population")
p_3 <- ggplot(data = aeropuerto, aes(x = population, y = distance)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1, p_2, p_3, ncol = 2, nrow = 2)
aero_model <- lm(data =aeropuerto, formula = revenue ~ population + distance)
summary(aero_model)
coef_pop <- summary(aero_model)$coefficients[2,1]
err_pop <- summary(aero_model)$coefficients[2,2]
coef_dist <- summary(aero_model)$coefficients[3,1]
err_dist <- summary(aero_model)$coefficients[3,2]
round(coef_pop + -1*err_pop*qt(0.975, 19), 4)
round(coef_pop + 1*err_pop*qt(0.975, 19), 4)
round(coef_dist + -1*err_dist*qt(0.975, 19), 4)
round(coef_dist + 1*err_dist*qt(0.975, 19), 4)
airport_no20 <- seq(1, 21, 1)
revenue_no20 <- c(233, 272, 253, 296, 268, 296, 276, 235, 253, 233, 240, 267, 338, 243, 252, 269, 242, 233, 234, 340, 200)
distance_no20 <- c(233, 209, 206, 232, 125, 245, 213, 134, 140, 165, 234, 205, 214, 183, 230, 238, 144, 220, 170, 290, 340)
population_no20 <- c(56, 74, 67, 78, 73, 54, 100, 98, 95, 81, 52, 96, 96, 73, 55, 91, 64, 60, 60, 70, 75)
#lit <- list(airport, revenue, distance, population)
#lapply(FUN = length, X = lit)
aeropuerto_no20 <- data.frame(airport_no20, revenue_no20, distance_no20, population_no20)
p_1_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Distance")
p_2_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = population_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Population")
p_3_no20 <- ggplot(data = aeropuerto_no20, aes(x = population_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1_no20, p_2_no20, p_3_no20, ncol = 2, nrow = 2)
no20_model <- lm(revenue_no20 ~ population_no20 + distance_no20, data = aeropuerto_no20)
summary(no20_model)
coef_pop_no20 <- summary(no20_model)$coefficients[2,1]
err_pop_no20 <- summary(no20_model)$coefficients[2,2]
coef_dist_no20 <- summary(no20_model)$coefficients[3,1]
err_dist_no20 <- summary(no20_model)$coefficients[3,2]
round(coef_pop_no20 + -1*err_pop_no20*qt(0.975, 19), 4)
round(coef_pop_no20 + 1*err_pop_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + -1*err_dist_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + 1*err_dist_no20*qt(0.975, 19), 4)
library(tidyverse)
library(gridExtra)
library(lmtest)
dose_level <- c(rep(2, 3), rep(4, 2), rep(8,2), rep(16, 3), rep(32,2), rep(64,3))
response <- c(5, 7, 3, 10, 14, 15, 17, 20, 21, 19, 23, 29, 28, 31, 30)
drugs_df <- data.frame(dose_level, response)
drugs_lm <- lm(response ~ dose_level, data = drugs_df)
drugs_lm
ggplot(data = drugs_df, aes(x = dose_level, y = response)) +
geom_jitter() +
geom_smooth(method = "lm")
summary(drugs_lm)
summary(aov(drugs_lm))
r <- sqrt(0.7394)
paste("r = ", round(r, 4))
coef <- summary(drugs_lm)$coefficients[2,1]
err <- summary(drugs_lm)$coefficients[2,2]
paste0("We are 95% confident that the slope coefficeint in this linear model is between ",
round(coef + -1*err*qt(0.975, 13), 4), " and ", round(coef + 1*err*qt(0.975, 13), 4), ".")
paste0("With a p-value of 2.41x106{-5}, dose is a significant predictor of protective strength of the drug.")
paste("r = ", round(r, 4))
y <- quantile(drugs_lm$residuals[!is.na(drugs_lm$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = drugs_lm, aes(x = drugs_lm$residuals)) +
geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = drugs_lm, aes(x = drugs_lm$fitted.values,
y = drugs_lm$residuals)) +
geom_jitter() +
xlab("Group Mean") +
ylab("Residuals") +
ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = drugs_lm) + stat_qq(aes(sample = drugs_lm$residuals),
alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") +
ggtitle("Q-Q Plot")
res_sum <- as.table(summary(drugs_lm$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
full_model <- lm(response ~ 0 + factor(dose_level), data = drugs_df)
fuller_model <- aov(full_model)
summary(fuller_model)
reduced <- aov(drugs_lm)
summary(aov(drugs_lm))
lackOfFit <- anova(drugs_lm, full_model)
lackOfFit$`Pr(>F)`
paste0("with a p-value of ", lackOfFit$`Pr(>F)`[2], " we have enough evidence to suggest there is a lack of fit with the linear model")
airport <- seq(1, 22, 1)
revenue <- c(233, 272, 253, 296, 268, 296, 276, 235, 253, 233, 240, 267, 338, 243, 252, 269, 242, 233, 234, 450, 340, 200)
distance <- c(233, 209, 206, 232, 125, 245, 213, 134, 140, 165, 234, 205, 214, 183, 230, 238, 144, 220, 170, 170, 290, 340)
population <- c(56, 74, 67, 78, 73, 54, 100, 98, 95, 81, 52, 96, 96, 73, 55, 91, 64, 60, 60, 240, 70, 75)
#lit <- list(airport, revenue, distance, population)
#lapply(FUN = length, X = lit)
aeropuerto <- data.frame(airport, revenue, distance, population)
p_1 <- ggplot(data = aeropuerto, aes(x = revenue, y = distance)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Distance")
p_2 <- ggplot(data = aeropuerto, aes(x = revenue, y = population)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Population")
p_3 <- ggplot(data = aeropuerto, aes(x = population, y = distance)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1, p_2, p_3, ncol = 2, nrow = 2)
aero_model <- lm(data =aeropuerto, formula = revenue ~ population + distance)
summary(aero_model)
coef_pop <- summary(aero_model)$coefficients[2,1]
err_pop <- summary(aero_model)$coefficients[2,2]
coef_dist <- summary(aero_model)$coefficients[3,1]
err_dist <- summary(aero_model)$coefficients[3,2]
round(coef_pop + -1*err_pop*qt(0.975, 19), 4)
round(coef_pop + 1*err_pop*qt(0.975, 19), 4)
round(coef_dist + -1*err_dist*qt(0.975, 19), 4)
round(coef_dist + 1*err_dist*qt(0.975, 19), 4)
airport_no20 <- seq(1, 21, 1)
revenue_no20 <- c(233, 272, 253, 296, 268, 296, 276, 235, 253, 233, 240, 267, 338, 243, 252, 269, 242, 233, 234, 340, 200)
distance_no20 <- c(233, 209, 206, 232, 125, 245, 213, 134, 140, 165, 234, 205, 214, 183, 230, 238, 144, 220, 170, 290, 340)
population_no20 <- c(56, 74, 67, 78, 73, 54, 100, 98, 95, 81, 52, 96, 96, 73, 55, 91, 64, 60, 60, 70, 75)
#lit <- list(airport, revenue, distance, population)
#lapply(FUN = length, X = lit)
aeropuerto_no20 <- data.frame(airport_no20, revenue_no20, distance_no20, population_no20)
p_1_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Distance")
p_2_no20 <- ggplot(data = aeropuerto_no20, aes(x = revenue_no20, y = population_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Revenue vs. Population")
p_3_no20 <- ggplot(data = aeropuerto_no20, aes(x = population_no20, y = distance_no20)) +
geom_jitter() +
geom_smooth(method = "lm") +
ggtitle("Population vs. Distance")
grid.arrange(p_1_no20, p_2_no20, p_3_no20, ncol = 2, nrow = 2)
no20_model <- lm(revenue_no20 ~ population_no20 + distance_no20, data = aeropuerto_no20)
summary(no20_model)
coef_pop_no20 <- summary(no20_model)$coefficients[2,1]
err_pop_no20 <- summary(no20_model)$coefficients[2,2]
coef_dist_no20 <- summary(no20_model)$coefficients[3,1]
err_dist_no20 <- summary(no20_model)$coefficients[3,2]
round(coef_pop_no20 + -1*err_pop_no20*qt(0.975, 19), 4)
round(coef_pop_no20 + 1*err_pop_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + -1*err_dist_no20*qt(0.975, 19), 4)
round(coef_dist_no20 + 1*err_dist_no20*qt(0.975, 19), 4)
grid.arrange(p_1_no20, p_2_no20, p_3_no20, ncol = 2, nrow = 2)
grid.arrange(p_1, p_2, p_3, ncol = 2, nrow = 2)
grid.arrange(p_1, p_2, p_3, ncol = 2, nrow = 2)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
ggplot(data = drugs_df, aes(x = dose_level, y = response)) +
geom_jitter() +
geom_smooth(method = "lm")
str(drugs_df)
summary(drugs_lm)
summary(lackOfFit)
lackOfFit$`Pr(>F)`
lackOfFit <- anova(drugs_lm, full_model)
lackOfFit
lackOfFit$`Pr(>F)`
(424/800)*(800) > 5
(376/800)*(800) > 5
?prop.test
prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater")
prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater", correct = FALSE)
0.576263
old <- prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater", correct = FALSE)
old$conf.int
0.605 - 2.05*(sqrt(0.605*0.395)/800)
0.605 - 2.05*(sqrt(0.605*0.395/800))
0.605 - 2.05*(sqrt(0.605*0.395/800))
0.605 + 2.05*(sqrt(0.605*0.395/800))
old <- prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater", correct = FALSE)
old
0.605 - 1.96*(sqrt(0.605*0.395/800))
0.605 + 1.96*(sqrt(0.605*0.395/800))
mower <- prop.test(x = c(10, 4), n = c(25, 25), alternative = "two.sided")
mower$conf.int
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater")
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater")
mower.test
mower <- prop.test(x = c(10, 4), n = c(25, 25), alternative = "two.sided",
correct = FALSE)
mower$conf.int
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater",
correct = FALSE)
mower.test
0.4*25 > 5
0.6*25 > 5
0.16*25 > 5
0.84*25 > 5
?fisher.test
0.4*25 > 5
0.6*25 > 5
0.16*25 > 5
0.84*25 > 5
x <- matrix(c(10, 4, 25, 25), nrow = 2, ncol = 2)
fisher.test(x, alternative = "greater")
x
0.4*25 > 5
0.6*25 > 5
0.16*25 > 5
0.84*25 > 5
x <- matrix(c(10, 4, 25, 25), byrow = TRUE, nrow = 2, ncol = 2)
fisher.test(x, alternative = "greater")
0.4*25 > 5
0.6*25 > 5
0.16*25 > 5
0.84*25 > 5
x <- matrix(c(10, 4, 25, 25), byrow = FALSE, nrow = 2, ncol = 2)
fisher.test(x, alternative = "greater")
0.4*25 > 5
0.6*25 > 5
0.16*25 > 5
0.84*25 > 5
x <- matrix(c(10, 4, 15, 21), byrow = FALSE, nrow = 2, ncol = 2)
fisher.test(x, alternative = "greater")
promote <- matrix(c(38, 80, 46, 84), nrow = 2, ncol = 2)
promote
?chisq.test
chi_promote <- chisq.test(x = promote)
chi_promote
chi_promote <- chisq.test(x = promote, correct = FALSE)
chi_promote
promote <- matrix(c(9, 41, 29, 39, 34, 46, 12, 38), nrow = 2, ncol = 4)
promote
promote_chi <- chisq.test(x = promote)
promote_chi
new_promote <- matrix(c(38, 80, 46, 84), nrow = 2, ncol = 2)
chi_promote <- chisq.test(x = new_promote, correct = )
chi_promote
new_promote <- matrix(c(38, 80, 46, 84), nrow = 2, ncol = 2)
chi_promote <- chisq.test(x = new_promote, correct = )
chi_promote
old <- prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater", correct = TRUE)
old
old <- prop.test(x = 484, n = 800, p = 0.5, alternative =  "greater", correct = FALSE)
old
?prop.test
0.605 - 1.96*(sqrt(0.605*0.395/800))
0.605 + 1.96*(sqrt(0.605*0.395/800))
new_promote <- matrix(c(38, 80, 46, 84), nrow = 2, ncol = 2)
chi_promote <- chisq.test(x = new_promote, correct = )
chi_promote
?prop.test
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater",
correct = TRUE)
mower.test
?prop.test
mower.test <- prop.test(x = c(10,4), n = c(15,21), alternative = "greater",
correct = TRUE)
mower.test
mower <- prop.test(x = c(10, 4), n = c(25, 25), alternative = "two.sided",
correct = FALSE)
mower$conf.int
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater",
correct = TRUE)
mower.test
mower.test <- prop.test(x = c(10,4), n = c(25,25), alternative = "greater",
correct = TRUE)
mower.test
?fisher.test
x
setwd("C:/Users/Kyle.ligon/Desktop/Kyle/Working Directory/Statistical Methods and Inference- UWF/STA5076/SemesterProject/CrimeInBaltimoreDataset")
library(tidyverse)
library(zoo)
library(lubridate)
library(gridExtra)
crime <- read_csv("BPD_Part_1_Victim_Based_Crime_Data.csv", progress = FALSE)
head(crime)
names(crime)
descCounts <- crime %>%
group_by(Description) %>%
tally() %>%
arrange(desc(n))
descCounts
hoodCounts <- crime %>%
group_by(Neighborhood) %>%
tally() %>%
arrange(desc(n))
head(hoodCounts)
arsons <- crime %>%
filter(Description == "ARSON")
head(arsons)
dim(arsons)
arsons_grouped <- arsons %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y"),
YearMon = as.yearmon(CrimeDate)) %>%
group_by(YearMon) %>%
summarize(TotalIncidents = sum(`Total Incidents`)) %>%
ungroup() %>%
mutate(WinterBin = ifelse(substr(YearMon, 1, 3) %in%  c("Dec", "Jan", "Feb"), "Winter",
"SprSumFall"))
ggplot(data = arsons_grouped, aes(x = TotalIncidents)) + geom_histogram(bins = 6) + facet_wrap(~ WinterBin)
var_W <- arsons_grouped %>% filter(WinterBin == "Winter") %>% summarize(Variance = var(TotalIncidents))
var_SSF <- arsons_grouped %>% filter(WinterBin != "Winter") %>% summarize(Variance = var(TotalIncidents))
#degrees of freedom for W
arsons_grouped %>% filter(WinterBin == "Winter") %>% tally() - 1
var_W
arsons_grouped %>% filter(WinterBin != "Winter") %>% tally() - 1
var_SSF
f <- as.numeric(round(var_W/var_SSF, 4))
f
qf(0.975, 16, 51)
f < qf(0.025, 16, 51)
f > qf(0.975, 16, 51)
auto_thefts <- crime %>%
filter(Description %in% c("ROBBERY - CARJACKING", "AUTO THEFT"))
head(auto_thefts)
at_form <- auto_thefts %>%
mutate(CrimeDate= as.Date(CrimeDate, format = "%m/%d/%Y"),
DateName = wday(CrimeDate, label = TRUE))
weekend <- at_form %>%
filter(DateName %in% c("Sat", "Sun")) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
weekday <- at_form %>%
filter(!(DateName %in% c("Sat", "Sun"))) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
ggplot(data = weekday, aes(x = Count)) + geom_histogram() + ggtitle("Weekday Distribution")
ggplot(data = weekend, aes(x = Count)) + geom_histogram() + ggtitle("Weekend Distribution")
#Weekday Variance
var(weekday$Count)
#df of Weekday
nrow(weekday)-1
#Weekend Variance
var(weekend$Count)
#df of Weekends
nrow(weekend)-1
f_w <- var(weekday$Count)/var(weekend$Count)
f_w
up <- qf(0.975, 1479, 591)
up
dwn <- qf(0.025, 1479, 591)
dwn
f_w > up
f_w < dwn
t.test(x = weekday$Count, y = weekend$Count)
lower <- qt(0.05, 2070)
lower
-1.5301 < lower
shootings <- crime %>%
#              mutate(CrimeTime = strptime(CrimeTime, format = "%H:%M")) %>%
filter(Description == "SHOOTING", CrimeTime > "17:00") %>%
group_by(CrimeDate, `Inside/Outside`) %>%
summarize(Count = sum(`Total Incidents`))
head(shootings)
dim(shootings)
ggplot(shootings, aes(x = Count)) + geom_histogram() + facet_grid(~ `Inside/Outside`)
w <- wilcox.test(Count ~ `Inside/Outside`, data = shootings, alternative = "greater")
w$statistic
w$p.value < 0.05
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT")) %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
assaults_split <- t.test(formula = percent ~ Description, data = assaults, alternative = "less")
assaults_split$statistic
assaults_split$p.value
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA") %>%
ungroup()
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- summer_burglaries %>%
mutate(District = as.factor(District))
sum_burg_anova_check <- aov(Count ~ District, data = summer_burglaries)
y <- quantile(sum_burg_anova_check$residuals[!is.na(sum_burg_anova_check$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$fitted.values, y = sum_burg_anova_check$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = sum_burg_anova_check) + stat_qq(aes(sample = sum_burg_anova_check$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(sum_burg_anova_check$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
summary(sum_burg_anova_check)
thsd_sum_burg <- TukeyHSD(sum_burg_anova_check)
thsd_sum_burg
str(crime)
assaults_split <- prop.test(formula = percent ~ Description, data = assaults, alternative = "less")
View(crime)
