anova_lenses <- aov(lov ~ Supplier, data = gather_lenses)
z <- quantile(anova_lenses$residuals[!is.na(anova_lenses$residuals)], c(0.25, 0.75))
w <- qnorm(c(0.25, 0.75))
slope = diff(z)/diff(w)
int <- z[1L] - slope*w[1L]
norm_res_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$fitted.values, y = anova_lenses$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq_lenses <- ggplot(data = anova_lenses) + stat_qq(aes(sample = anova_lenses$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_lenses$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
anova_lenses
summary(anova_lenses)
kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
gather_lenses
?kruskal.test
kw_lenses <- kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
kw_lenses
kw_lenses <- kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
kw_lenses
kw_lenses$statistic
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
kw_lenses <- kruskal.test(lov ~ Supplier, data = gather_lenses)
kw_lenses
kw_lenses$statistic
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses$Supplier
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
real_lenses$Supplier
?TukeyHSD
3.86/sqrt(2)
sqrt(115/3)
2.7294*6.1914
?kruskal.test
pairwise.wilcox.test(gather_lenses$lov, gather_lenses$Supplier, p.adjust.method = "bonferroni")
ranks_1 <- c(39,32, 33, 28, 29, 34, 35, 31, 36)
ranks_2 <- c(19, 20, 21, 22, 23, 24, 25, 26, 27)
ranks_3 <- c(10, 11, 12, 13, 14, 15, 16, 17, 18)
ranks_4 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
ranks_5 <- c(38, 39, 30, 40, 41, 42, 43, 44, 45)
ranks_table = cbind(ranks_1, ranks_2, ranks_3, ranks_4, ranks_5)
colnames(ranks_table) <- c("Ranks_Group1", "Ranks_Group2", "Ranks_Group3", "Ranks_Group4", "Ranks_Group5")
ranks_table
ranks_1 <- c(39,32, 33, 28, 29, 34, 35, 31, 36)
ranks_2 <- c(19, 20, 21, 22, 23, 24, 25, 26, 27)
ranks_3 <- c(10, 11, 12, 13, 14, 15, 16, 17, 18)
ranks_4 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
ranks_5 <- c(38, 39, 30, 40, 41, 42, 43, 44, 45)
ranks_table = data.frame(cbind(ranks_1, ranks_2, ranks_3, ranks_4, ranks_5))
colnames(ranks_table) <- c("Ranks_Group1", "Ranks_Group2", "Ranks_Group3", "Ranks_Group4", "Ranks_Group5")
ranks_table
sapply(ranks_table, mean)
library(tidyverse)
library(zoo)
library(lubridate)
crime <- read_csv("BPD_Part_1_Victim_Based_Crime_Data.csv", progress = FALSE)
head(crime)
names(crime)
descCounts <- crime %>%
group_by(Description) %>%
tally() %>%
arrange(desc(n))
descCounts
hoodCounts <- crime %>%
group_by(Neighborhood) %>%
tally() %>%
arrange(desc(n))
head(hoodCounts)
arsons <- crime %>%
filter(Description == "ARSON")
head(arsons)
dim(arsons)
arsons_grouped <- arsons %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y"),
YearMon = as.yearmon(CrimeDate)) %>%
group_by(YearMon) %>%
summarize(TotalIncidents = sum(`Total Incidents`)) %>%
ungroup() %>%
mutate(WinterBin = ifelse(substr(YearMon, 1, 3) %in%  c("Dec", "Jan", "Feb"), "Winter",
"SprSumFall"))
ggplot(data = arsons_grouped, aes(x = TotalIncidents)) + geom_histogram(bins = 6) + facet_wrap(~ WinterBin)
var_W <- arsons_grouped %>% filter(WinterBin == "Winter") %>% summarize(Variance = var(TotalIncidents))
var_SSF <- arsons_grouped %>% filter(WinterBin != "Winter") %>% summarize(Variance = var(TotalIncidents))
#degrees of freedom for W
arsons_grouped %>% filter(WinterBin == "Winter") %>% tally() - 1
var_W
arsons_grouped %>% filter(WinterBin != "Winter") %>% tally() - 1
var_SSF
f <- as.numeric(round(var_W/var_SSF, 4))
f
qf(0.975, 16, 51)
f < qf(0.025, 16, 51)
f > qf(0.975, 16, 51)
auto_thefts <- crime %>%
filter(Description %in% c("ROBBERY - CARJACKING", "AUTO THEFT"))
head(auto_thefts)
at_form <- auto_thefts %>%
mutate(CrimeDate= as.Date(CrimeDate, format = "%m/%d/%Y"),
DateName = wday(CrimeDate, label = TRUE))
weekend <- at_form %>%
filter(DateName %in% c("Sat", "Sun")) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
weekday <- at_form %>%
filter(!(DateName %in% c("Sat", "Sun"))) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
ggplot(data = weekday, aes(x = Count)) + geom_histogram() + ggtitle("Weekday Distribution")
ggplot(data = weekend, aes(x = Count)) + geom_histogram() + ggtitle("Weekend Distribution")
#Weekday Variance
var(weekday$Count)
#df of Weekday
nrow(weekday)-1
#Weekend Variance
var(weekend$Count)
#df of Weekends
nrow(weekend)-1
f_w <- var(weekday$Count)/var(weekend$Count)
f_w
up <- qf(0.975, 1479, 591)
up
dwn <- qf(0.025, 1479, 591)
dwn
f_w > up
f_w < dwn
t.test(x = weekday$Count, y = weekend$Count)
lower <- qt(0.05, 2070)
lower
-1.5301 < lower
shootings <- crime %>%
#              mutate(CrimeTime = strptime(CrimeTime, format = "%H:%M")) %>%
filter(Description == "SHOOTING", CrimeTime > "17:00") %>%
group_by(CrimeDate, `Inside/Outside`) %>%
summarize(Count = sum(`Total Incidents`))
head(shootings)
dim(shootings)
ggplot(shootings, aes(x = Count)) + geom_histogram() + facet_grid(~ `Inside/Outside`)
wilcox.test(Count ~ `Inside/Outside`, data = shootings)
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT")) %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
setwd("C:/Users/Kyle.ligon/Desktop/Kyle/Working Directory/Statistical Methods and Inference- UWF/STA5076/SemesterProject/CrimeInBaltimoreDataset")
library(tidyverse)
library(zoo)
library(lubridate)
crime <- read_csv("BPD_Part_1_Victim_Based_Crime_Data.csv", progress = FALSE)
head(crime)
names(crime)
descCounts <- crime %>%
group_by(Description) %>%
tally() %>%
arrange(desc(n))
descCounts
hoodCounts <- crime %>%
group_by(Neighborhood) %>%
tally() %>%
arrange(desc(n))
head(hoodCounts)
arsons <- crime %>%
filter(Description == "ARSON")
head(arsons)
dim(arsons)
arsons_grouped <- arsons %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y"),
YearMon = as.yearmon(CrimeDate)) %>%
group_by(YearMon) %>%
summarize(TotalIncidents = sum(`Total Incidents`)) %>%
ungroup() %>%
mutate(WinterBin = ifelse(substr(YearMon, 1, 3) %in%  c("Dec", "Jan", "Feb"), "Winter",
"SprSumFall"))
ggplot(data = arsons_grouped, aes(x = TotalIncidents)) + geom_histogram(bins = 6) + facet_wrap(~ WinterBin)
var_W <- arsons_grouped %>% filter(WinterBin == "Winter") %>% summarize(Variance = var(TotalIncidents))
var_SSF <- arsons_grouped %>% filter(WinterBin != "Winter") %>% summarize(Variance = var(TotalIncidents))
#degrees of freedom for W
arsons_grouped %>% filter(WinterBin == "Winter") %>% tally() - 1
var_W
arsons_grouped %>% filter(WinterBin != "Winter") %>% tally() - 1
var_SSF
f <- as.numeric(round(var_W/var_SSF, 4))
f
qf(0.975, 16, 51)
f < qf(0.025, 16, 51)
f > qf(0.975, 16, 51)
auto_thefts <- crime %>%
filter(Description %in% c("ROBBERY - CARJACKING", "AUTO THEFT"))
head(auto_thefts)
at_form <- auto_thefts %>%
mutate(CrimeDate= as.Date(CrimeDate, format = "%m/%d/%Y"),
DateName = wday(CrimeDate, label = TRUE))
weekend <- at_form %>%
filter(DateName %in% c("Sat", "Sun")) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
weekday <- at_form %>%
filter(!(DateName %in% c("Sat", "Sun"))) %>%
group_by(CrimeDate, DateName) %>%
summarize(Count = sum(`Total Incidents`))
ggplot(data = weekday, aes(x = Count)) + geom_histogram() + ggtitle("Weekday Distribution")
ggplot(data = weekend, aes(x = Count)) + geom_histogram() + ggtitle("Weekend Distribution")
#Weekday Variance
var(weekday$Count)
#df of Weekday
nrow(weekday)-1
#Weekend Variance
var(weekend$Count)
#df of Weekends
nrow(weekend)-1
f_w <- var(weekday$Count)/var(weekend$Count)
f_w
up <- qf(0.975, 1479, 591)
up
dwn <- qf(0.025, 1479, 591)
dwn
f_w > up
f_w < dwn
t.test(x = weekday$Count, y = weekend$Count)
lower <- qt(0.05, 2070)
lower
-1.5301 < lower
shootings <- crime %>%
#              mutate(CrimeTime = strptime(CrimeTime, format = "%H:%M")) %>%
filter(Description == "SHOOTING", CrimeTime > "17:00") %>%
group_by(CrimeDate, `Inside/Outside`) %>%
summarize(Count = sum(`Total Incidents`))
head(shootings)
dim(shootings)
ggplot(shootings, aes(x = Count)) + geom_histogram() + facet_grid(~ `Inside/Outside`)
wilcox.test(Count ~ `Inside/Outside`, data = shootings)
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT")) %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
w <- wilcox.test(Count ~ `Inside/Outside`, data = shootings)
?wilcox.test
w <- wilcox.test(Count ~ `Inside/Outside`, data = shootings, alternative = "greater")
w$parameter
w$statistic
w$p.value < 0.05
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT")) %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
?t.test
t.test(x = assaults%>% filter(Description == "AGG. ASSAULT") %>% select(percent),
y = assaults %>% filter(Description == "COMMON ASSAULT") %>% select(percent),
alternative = "less")
t.test(formula = percent ~ Description, alternative = "less")
t.test(formula = percent ~ Description, data = assaults, alternative = "less")
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT"), Neighborhood == "Downtown") %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
assaults <- crime %>%
filter(Description %in% c("AGG. ASSAULT", "COMMON ASSAULT")) %>%
select(CrimeDate, Description, `Total Incidents`) %>%
group_by(CrimeDate, Description) %>%
summarize(Total = sum(`Total Incidents`)) %>%
ungroup()
day_merge <- assaults %>%
group_by(CrimeDate) %>%
summarize(Count = sum(Total))
assaults <- assaults %>%
group_by(CrimeDate) %>%
left_join(day_merge) %>%
mutate(percent = Total/Count) %>%
ungroup() %>%
mutate(CrimeDate = as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
arrange(desc(CrimeDate))
ggplot(data = assaults, aes(x =percent)) + geom_histogram() + facet_grid(~Description)
t.test(formula = percent ~ Description, data = assaults, alternative = "less")
assaults_split <- t.test(formula = percent ~ Description, data = assaults, alternative = "less")
assaults_split$statistic
assaults_split$p.value
head(crime)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY")
head(summer_burglaries)
dim(summer_burglaries)
names(crime)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y"), YearMon = yearmon(CrimeDate)) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y"), YearMon = yearmon(CrimeDate))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = yearmon(CrimeDate)) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y"))
head(summer_burglaries)
?yearmon
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
head(summer_burglaries)
dim(summer_burglaries)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_grid(~ District)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`))
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA")
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
?kruskal.test
kruskal.test(formula = Count ~ District, data = summer_burglaries)
names(summer_burglaries)
summer_burglaries <- summer_burglaries %>%
mutate(District = as.factor(District))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA") %>%
ungroup()
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- summer_burglaries %>%
mutate(District = as.factor(District))
kruskal.test(formula = Count ~ District, data = summer_burglaries)
View(summer_burglaries)
sum_burg_anova_check <- aov(Count ~ District, data = summer_burglaries)
y <- quantile(sum_burg_anova_check$residuals[!is.na(sum_burg_anova_check$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$fitted.values, y = sum_burg_anova_check$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = sum_burg_anova_check) + stat_qq(aes(sample = sum_burg_anova_check$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(sum_burg_anova_check$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
library(gridExtra)
sum_burg_anova_check <- aov(Count ~ District, data = summer_burglaries)
y <- quantile(sum_burg_anova_check$residuals[!is.na(sum_burg_anova_check$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$fitted.values, y = sum_burg_anova_check$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = sum_burg_anova_check) + stat_qq(aes(sample = sum_burg_anova_check$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(sum_burg_anova_check$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
max(summer_burglaries$Count)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA", Count < 200) %>%
ungroup()
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA")
summer_burglaries %>% arrange(desc(Count))
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA", Count < 200) %>%
ungroup()
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- summer_burglaries %>%
mutate(District = as.factor(District))
sum_burg_anova_check <- aov(Count ~ District, data = summer_burglaries)
y <- quantile(sum_burg_anova_check$residuals[!is.na(sum_burg_anova_check$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$fitted.values, y = sum_burg_anova_check$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = sum_burg_anova_check) + stat_qq(aes(sample = sum_burg_anova_check$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(sum_burg_anova_check$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
sum_burg_anova_check$model
summary(sum_burg_anova_check)
summer_burglaries <- crime %>%
filter(substr(CrimeDate, 1,1) %in% c('6','7','8'), Description == "BURGLARY") %>%
mutate(CrimeDate <- as.Date(CrimeDate, format = "%m/%d/%Y")) %>%
mutate(YearMon = as.yearmon(CrimeDate,  "%m/%d/%Y")) %>%
group_by(District, YearMon) %>%
summarize(Count = sum(`Total Incidents`)) %>%
filter(District != "NA") %>%
ungroup()
ggplot(data= summer_burglaries, aes(x = Count)) + geom_histogram() + facet_wrap(~ District)
summer_burglaries <- summer_burglaries %>%
mutate(District = as.factor(District))
sum_burg_anova_check <- aov(Count ~ District, data = summer_burglaries)
y <- quantile(sum_burg_anova_check$residuals[!is.na(sum_burg_anova_check$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = sum_burg_anova_check, aes(x = sum_burg_anova_check$fitted.values, y = sum_burg_anova_check$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = sum_burg_anova_check) + stat_qq(aes(sample = sum_burg_anova_check$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(sum_burg_anova_check$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
summary(sum_burg_anova_check)
thsd_sum_burg <- TukeyHSD(sum_burg_anova_check)
thsd_sum_burg
unique(summer_burglaries$District)
?TukeyHSD
