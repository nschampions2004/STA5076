gather_lenses <- lenses_dat %>%
gather(key = "sample", value = "lov", -Supplier)
gather_lenses$Supplier <- factor(gather_lenses$Supplier)
anova_lenses <- aov(lov ~ Supplier, data = gather_lenses)
z <- quantile(anova_lenses$residuals[!is.na(anova_lenses$residuals)], c(0.25, 0.75))
w <- qnorm(c(0.25, 0.75))
slope = diff(z)/diff(w)
int <- z[1L] - slope*w[1L]
norm_res_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$fitted.values, y = anova_lenses$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq_lenses <- ggplot(data = anova_lenses) + stat_qq(aes(sample = anova_lenses$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_lenses$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
anova_lenses
summary(anova_lenses)
kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
gather_lenses
?kruskal.test
kw_lenses <- kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
kw_lenses
kw_lenses <- kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
kw_lenses
kw_lenses$statistic
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
kw_lenses <- kruskal.test(lov ~ Supplier, data = gather_lenses)
kw_lenses
kw_lenses$statistic
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses$Supplier
real_lenses <- TukeyHSD(anova_lenses, ordered = TRUE)
real_lenses$treatment
plot(real_lenses)
real_lenses
real_lenses$Supplier
?TukeyHSD
3.86/sqrt(2)
sqrt(115/3)
2.7294*6.1914
?kruskal.test
pairwise.wilcox.test(gather_lenses$lov, gather_lenses$Supplier, p.adjust.method = "bonferroni")
ranks_1 <- c(39,32, 33, 28, 29, 34, 35, 31, 36)
ranks_2 <- c(19, 20, 21, 22, 23, 24, 25, 26, 27)
ranks_3 <- c(10, 11, 12, 13, 14, 15, 16, 17, 18)
ranks_4 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
ranks_5 <- c(38, 39, 30, 40, 41, 42, 43, 44, 45)
ranks_table = cbind(ranks_1, ranks_2, ranks_3, ranks_4, ranks_5)
colnames(ranks_table) <- c("Ranks_Group1", "Ranks_Group2", "Ranks_Group3", "Ranks_Group4", "Ranks_Group5")
ranks_table
ranks_1 <- c(39,32, 33, 28, 29, 34, 35, 31, 36)
ranks_2 <- c(19, 20, 21, 22, 23, 24, 25, 26, 27)
ranks_3 <- c(10, 11, 12, 13, 14, 15, 16, 17, 18)
ranks_4 <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
ranks_5 <- c(38, 39, 30, 40, 41, 42, 43, 44, 45)
ranks_table = data.frame(cbind(ranks_1, ranks_2, ranks_3, ranks_4, ranks_5))
colnames(ranks_table) <- c("Ranks_Group1", "Ranks_Group2", "Ranks_Group3", "Ranks_Group4", "Ranks_Group5")
ranks_table
sapply(ranks_table, mean)
TukeyHSD(anova_mod_noI)
library(tidyverse)
library(grid)
library(gridExtra)
library(kableExtra)
library(multcomp)
a1_p1 <- data.frame(matrix(c(rep("a1", 10), rep("p1", 10), 19, 36, 40, 30, 4, 10, 30, 5, 34, 21), ncol = 3, nrow = 10))
a2_p1 <- data.frame(matrix(c(rep("a2", 10), rep("p1", 10), 19, 35, 22, 28, 1, 27, 27, 16, 3, 18), ncol = 3, nrow = 10))
a3_p1 <- data.frame(matrix(c(rep("a3", 10), rep("p1", 10), 37, 6, 28, 4, 32, 16, 8, 41, 29, 18), ncol = 3, nrow = 10))
a1_p2 <- data.frame(matrix(c(rep("a1", 10), rep("p2", 10), 39, 18, 32, 22, 16, 2, 36, 43, 7, 16), ncol = 3, nrow = 10))
a2_p2 <- data.frame(matrix(c(rep("a2", 10), rep("p2", 10), 30, 47, 6, 27, 44, 26, 33, 48, 23, 21), ncol = 3, nrow = 10))
a3_p2 <- data.frame(matrix(c(rep("a3", 10), rep("p2", 10), 51, 52, 43, 48, 39, 33, 56, 43, 40, 51), ncol = , nrow = 10))
frame <- rbind(a1_p1, a2_p1, a3_p1, a1_p2, a2_p2, a3_p2)
colnames(frame) <- c("ageGroup", "products", "att_spans")
frame$att_spans <- as.numeric(frame$att_spans)
anova_mod <- aov(att_spans ~ ageGroup * products, data = frame)
y <- quantile(anova_mod$residuals[!is.na(anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = anova_mod, aes(x = anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = anova_mod, aes(x = anova_mod$fitted.values, y = anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = anova_mod) + stat_qq(aes(sample = anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
#INteraction Term
qf(0.95, 2, 54)
#Age Group
qf(0.95, 2, 56)
#Products
qf(0.95, 1, 56)
anova_mod_noI <- aov(data = frame, formula = att_spans ~ ageGroup + products)
TukeyHSD(anova_mod_noI)
frame_Tukey <- frame %>%
mutate(Combination = paste(ageGroup, "-", products))
new_anova_mod <- aov(data = frame, formual = att_spans ~ Combination)
frame_Tukey <- frame %>%
mutate(Combination = paste(ageGroup, "-", products))
new_anova_mod <- aov(data = frame, formula = att_spans ~ Combination)
frame_Tukey <- frame %>%
mutate(Combination = paste(ageGroup, "-", products))
new_anova_mod <- aov(data = frame_Tukey, formula = att_spans ~ Combination)
TukeyHSD(new_anova_mod)
frame_Tukey <- frame %>%
mutate(Combination = paste0(ageGroup, "-", products))
new_anova_mod <- aov(data = frame_Tukey, formula = att_spans ~ Combination)
TukeyHSD(new_anova_mod)
TukeyHSD(anova_mod_noI)
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4, 1"), rep("cm5", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 20.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4, 1"))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 20.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 20.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol
par(mfrow = c(2,2))
plot(freq ~ car_model + driver + seed, data = petrol)
par(mfrow = c(2,2))
plot(mileage ~ car_model + driver + seed, data = petrol)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model+driver+seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 12) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 24) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 4) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
petrol_anova_mod
petrol
?aov
str(petrol)
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver+ seed)
summary(petrol_anova_mod)
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
summary(petrol_anova_mod)
petrol_lm <- lm(data = petrol, mileage ~ car_model+driver+seed)
aov(petrol_lm)
petrol_lm
install.packages("nlme")
install.packages("nlme")
install.packages("nlme")
library(nlme)
?lme
lme(data = petrol, formula = mileage~car_model+driver+seed)
lme(data = petrol, mileage~car_model+driver+seed)
lm(data = petrol, formula = mileage~car_model+driver+seed)
anova(lm(formula = mileage ~ car_model + driver + seed, data = petrol))
str(petrol)
str(petrol$car_model)
str(petrol$driver)
str(petrol$seed)
petrol$driver
petrol$car_model
petrol$seed
petrol
anova(lm(data = petrol, formula = mileage ~ car_model+driver+seed))
aov(data = petrol, formula = mileage~car_model+driver+seed)
?replications
replications(formula = mileage ~ car_model+driver+seed, data = petrol)
unique(petrol$driver)
unique(petrol$car_model)
unique(petrol$seed)
g <- lm(mileag ~ driver + car_model + seed, data = petrol)
g <- lm(mileage ~ driver + car_model + seed, data = petrol)
g
anova(g)
anova(lm(formula = mileage ~ seed + car_model + driver, data = petrol))
petrol
str(petrol)
matrix(petrol$seed, 4, 4)
plot(mileage ~ car_model + driver + seed, data = petrol)
par(mfrow = c(2,2))
plot(mileage ~ car_model + driver + seed, data = petrol)
data(breaking)
library(agricolae)
data(breaking)
str(car_model)
# creating the data frame
car_model1 <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver1 <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model1, driver1, seed, mileage)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
# creating the data frame
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
library(tidyverse)
library(grid)
library(gridExtra)
library(kableExtra)
library(multcomp)
a1_p1 <- data.frame(matrix(c(rep("a1", 10), rep("p1", 10), 19, 36, 40, 30, 4, 10, 30, 5, 34, 21), ncol = 3, nrow = 10))
a2_p1 <- data.frame(matrix(c(rep("a2", 10), rep("p1", 10), 19, 35, 22, 28, 1, 27, 27, 16, 3, 18), ncol = 3, nrow = 10))
a3_p1 <- data.frame(matrix(c(rep("a3", 10), rep("p1", 10), 37, 6, 28, 4, 32, 16, 8, 41, 29, 18), ncol = 3, nrow = 10))
a1_p2 <- data.frame(matrix(c(rep("a1", 10), rep("p2", 10), 39, 18, 32, 22, 16, 2, 36, 43, 7, 16), ncol = 3, nrow = 10))
a2_p2 <- data.frame(matrix(c(rep("a2", 10), rep("p2", 10), 30, 47, 6, 27, 44, 26, 33, 48, 23, 21), ncol = 3, nrow = 10))
a3_p2 <- data.frame(matrix(c(rep("a3", 10), rep("p2", 10), 51, 52, 43, 48, 39, 33, 56, 43, 40, 51), ncol = , nrow = 10))
frame <- rbind(a1_p1, a2_p1, a3_p1, a1_p2, a2_p2, a3_p2)
colnames(frame) <- c("ageGroup", "products", "att_spans")
frame$att_spans <- as.numeric(frame$att_spans)
anova_mod <- aov(att_spans ~ ageGroup * products, data = frame)
y <- quantile(anova_mod$residuals[!is.na(anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = anova_mod, aes(x = anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = anova_mod, aes(x = anova_mod$fitted.values, y = anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = anova_mod) + stat_qq(aes(sample = anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
#INteraction Term
qf(0.95, 2, 54)
#Age Group
qf(0.95, 2, 56)
#Products
qf(0.95, 1, 56)
anova_mod_noI <- aov(data = frame, formula = att_spans ~ ageGroup + products)
# if there was an interaction, we would do this.
frame_Tukey <- frame %>%
mutate(Combination = paste0(ageGroup, "-", products))
new_anova_mod <- aov(data = frame_Tukey, formula = att_spans ~ Combination)
TukeyHSD(new_anova_mod)
#but since there's not, we can just do the Tukey W on the old ANOVA model
TukeyHSD(anova_mod_noI)
# creating the data frame
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3", 1), rep("cm4", 1))
driver <- c(rep("d1", 1), rep("d2", 1), rep("d3", 1), rep("d4", 1))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
summary(petrol_anova_mod)
petrol
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed))
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
petrol
petrol_anova_mod
anova(lm(mileage~car_model+driver+seed,data = petrol))
aov(mileage~car_model+driver+seed, data = petrol)
car_model <- c("cm1","cm2", "cm3", "cm4","cm1","cm2", "cm3", "cm4","cm1","cm2", "cm3", "cm4","cm1","cm2", "cm3", "cm4")
driver <- c("d1", "d2", "d3","d4", "d1", "d2", "d3","d4", "d1", "d2", "d3","d4", "d1", "d2", "d3","d4")
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed))
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
petrol_anova_mod
petrol
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrnge(car_model)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrnge(car_model)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrange(car_model)
petrol
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3",1), rep("cm4", 1))
driver <- c(rep("d1",4), rep("d2", 4), rep("d3", 4), rep("d4", 4))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrange(car_model)
petrol
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
petrol
petrol_anova_mod
summary(petrol_anova_mod)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
qf(0.95, 3, 6)
TukeyHSD(petrol_anova_mod)
aov(data = petrol, formula = mileage ~ seed)
aov(data = petrol, formula = mileage ~ seed)
summary(aov(formula = mileage ~ seed, data = petrol))
pretrol_noBlock <- aov(data = petrol, formula = mileage ~ seed)
y <- quantile(pretrol_noBlock$residuals[!is.na(pretrol_noBlock$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$fitted.values, y = pretrol_noBlock$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = pretrol_noBlock) + stat_qq(aes(sample = pretrol_noBlock$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(pretrol_noBlock$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3",1), rep("cm4", 1))
driver <- c(rep("d1",4), rep("d2", 4), rep("d3", 4), rep("d4", 4))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrange(car_model)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
pretrol_noBlock <- aov(data = petrol, formula = mileage ~ seed)
y <- quantile(pretrol_noBlock$residuals[!is.na(pretrol_noBlock$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$fitted.values, y = pretrol_noBlock$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = pretrol_noBlock) + stat_qq(aes(sample = pretrol_noBlock$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(pretrol_noBlock$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
setwd("C:/Users/Kyle.ligon/Desktop/Working Directory/Statistical Methods and Inference- UWF/STA5076/Chapter 14 and 15 Homework")
summary(petrol_noBlock)
library(tidyverse)
library(grid)
library(gridExtra)
library(kableExtra)
library(multcomp)
a1_p1 <- data.frame(matrix(c(rep("a1", 10), rep("p1", 10), 19, 36, 40, 30, 4, 10, 30, 5, 34, 21), ncol = 3, nrow = 10))
a2_p1 <- data.frame(matrix(c(rep("a2", 10), rep("p1", 10), 19, 35, 22, 28, 1, 27, 27, 16, 3, 18), ncol = 3, nrow = 10))
a3_p1 <- data.frame(matrix(c(rep("a3", 10), rep("p1", 10), 37, 6, 28, 4, 32, 16, 8, 41, 29, 18), ncol = 3, nrow = 10))
a1_p2 <- data.frame(matrix(c(rep("a1", 10), rep("p2", 10), 39, 18, 32, 22, 16, 2, 36, 43, 7, 16), ncol = 3, nrow = 10))
a2_p2 <- data.frame(matrix(c(rep("a2", 10), rep("p2", 10), 30, 47, 6, 27, 44, 26, 33, 48, 23, 21), ncol = 3, nrow = 10))
a3_p2 <- data.frame(matrix(c(rep("a3", 10), rep("p2", 10), 51, 52, 43, 48, 39, 33, 56, 43, 40, 51), ncol = , nrow = 10))
frame <- rbind(a1_p1, a2_p1, a3_p1, a1_p2, a2_p2, a3_p2)
colnames(frame) <- c("ageGroup", "products", "att_spans")
frame$att_spans <- as.numeric(frame$att_spans)
anova_mod <- aov(att_spans ~ ageGroup * products, data = frame)
y <- quantile(anova_mod$residuals[!is.na(anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = anova_mod, aes(x = anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = anova_mod, aes(x = anova_mod$fitted.values, y = anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = anova_mod) + stat_qq(aes(sample = anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
#INteraction Term
qf(0.95, 2, 54)
#Age Group
qf(0.95, 2, 56)
#Products
qf(0.95, 1, 56)
anova_mod_noI <- aov(data = frame, formula = att_spans ~ ageGroup + products)
# if there was an interaction, we would do this.
frame_Tukey <- frame %>%
mutate(Combination = paste0(ageGroup, "-", products))
new_anova_mod <- aov(data = frame_Tukey, formula = att_spans ~ Combination)
TukeyHSD(new_anova_mod)
#but since there's not, we can just do the Tukey W on the old ANOVA model
TukeyHSD(anova_mod_noI)
# creating the data frame
car_model <- c(rep("cm1", 1), rep("cm2", 1), rep("cm3",1), rep("cm4", 1))
driver <- c(rep("d1",4), rep("d2", 4), rep("d3", 4), rep("d4", 4))
seed <- c("A", "B", "C", "D", "B", "C", "D", "A", "C", "D", "A", "B", "D", "A", "B", "C")
mileage <- c(15.5, 16.3, 10.5, 14.0, 33.8, 26.4, 31.5, 34.5, 13.7, 19.1, 17.5, 19.7, 29.2, 22.5, 30.1, 21.6)
petrol <- data.frame(car_model, driver, seed, mileage)
petrol <- petrol %>%
mutate(car_model = as.factor(car_model),
driver = as.factor(driver),
seed = as.factor(seed)) %>%
arrange(car_model)
petrol_anova_mod <- aov(data = petrol, formula = mileage ~ car_model + driver + seed)
y <- quantile(petrol_anova_mod$residuals[!is.na(petrol_anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = petrol_anova_mod, aes(x = petrol_anova_mod$fitted.values, y = petrol_anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = petrol_anova_mod) + stat_qq(aes(sample = petrol_anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(petrol_anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
TukeyHSD(petrol_anova_mod)
pretrol_noBlock <- aov(data = petrol, formula = mileage ~ seed)
y <- quantile(pretrol_noBlock$residuals[!is.na(pretrol_noBlock$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = pretrol_noBlock, aes(x = pretrol_noBlock$fitted.values, y = pretrol_noBlock$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = pretrol_noBlock) + stat_qq(aes(sample = pretrol_noBlock$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(pretrol_noBlock$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
summary(pretrol_noBlock)
qf(0.95, 3, 12)
