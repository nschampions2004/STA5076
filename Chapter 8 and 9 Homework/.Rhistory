33.6 - 1.96*(9.2/sqrt(40))
f <- c(9.2, 7.7, 11.9, 6.2, 9.0, 8.4, 6.9, 7.6, 7.4, 8.0, 9.9, 6.7, 8.4, 9.3, 9.1, 8.7, 9.2, 9.1, 8.4, 9.6, 7.7, 9.0, 9.0, 8.4)
m <- c(10.4, 8.9, 11.7, 12.0, 8.7, 9.4, 9.8, 9.0, 9.2, 9.7, 9.1, 8.8, 7.9, 9.9, 10.0, 10.1, 9.0, 11.4, 8.7, 9.6, 9.2, 9.7, 8.9, 9.2, 9.4, 9.7, 8.9, 9.3, 10.4, 11.9, 9.0, 12.0, 9.6, 9.2, 9.9, 9.0)
f <- c(9.2, 7.7, 11.9, 6.2, 9.0, 8.4, 6.9, 7.6, 7.4, 8.0, 9.9, 6.7, 8.4, 9.3, 9.1, 8.7, 9.2, 9.1, 8.4, 9.6, 7.7, 9.0, 9.0, 8.4)
m <- c(10.4, 8.9, 11.7, 12.0, 8.7, 9.4, 9.8, 9.0, 9.2, 9.7, 9.1, 8.8, 7.9, 9.9, 10.0, 10.1, 9.0, 11.4, 8.7, 9.6, 9.2, 9.7, 8.9, 9.2, 9.4, 9.7, 8.9, 9.3, 10.4, 11.9, 9.0, 12.0, 9.6, 9.2, 9.9, 9.0)
length(m)
length(g)
length(f)
sd(f)^2
sd(m)^2
sqrt((((length(m)-1)*sd(m)^2) + (length(f)-1)*sd(f)^2)/(length(m)+length(f) -1))
f <- c(9.2, 7.7, 11.9, 6.2, 9.0, 8.4, 6.9, 7.6, 7.4, 8.0, 9.9, 6.7, 8.4, 9.3, 9.1, 8.7, 9.2, 9.1, 8.4, 9.6, 7.7, 9.0, 9.0, 8.4)
m <- c(10.4, 8.9, 11.7, 12.0, 8.7, 9.4, 9.8, 9.0, 9.2, 9.7, 9.1, 8.8, 7.9, 9.9, 10.0, 10.1, 9.0, 11.4, 8.7, 9.6, 9.2, 9.7, 8.9, 9.2, 9.4, 9.7, 8.9, 9.3, 10.4, 11.9, 9.0, 12.0, 9.6, 9.2, 9.9, 9.0)
#y-bars/x-bars
m_m <- mean(m)
m_f <- mean(f)
#variances
v_f <- sd(f)^2
v_m <- sd(m)^2
#standard deviations
sd_f <- sd(f)
sd_m <- sd(m)
#standard deviation of the population?
s_p <- sqrt((((length(m)-1)*sd(m)^2) + (length(f)-1)*sd(f)^2)/(length(m)+length(f) -1))
f <- c(9.2, 7.7, 11.9, 6.2, 9.0, 8.4, 6.9, 7.6, 7.4, 8.0, 9.9, 6.7, 8.4, 9.3, 9.1, 8.7, 9.2, 9.1, 8.4, 9.6, 7.7, 9.0, 9.0, 8.4)
m <- c(10.4, 8.9, 11.7, 12.0, 8.7, 9.4, 9.8, 9.0, 9.2, 9.7, 9.1, 8.8, 7.9, 9.9, 10.0, 10.1, 9.0, 11.4, 8.7, 9.6, 9.2, 9.7, 8.9, 9.2, 9.4, 9.7, 8.9, 9.3, 10.4, 11.9, 9.0, 12.0, 9.6, 9.2, 9.9, 9.0)
#lengths
n_m <- length(m)
n_f <- length(f)
#y-bars/x-bars
m_m <- mean(m)
m_f <- mean(f)
#variances
v_f <- sd(f)^2
v_m <- sd(m)^2
#standard deviations
sd_f <- sd(f)
sd_m <- sd(m)
#standard deviation of the population?
s_p <- sqrt((((length(m)-1)*sd(m)^2) + (length(f)-1)*sd(f)^2)/(length(m)+length(f) -1))
m_f
m_m
s_p
1/n_f
1/n_m
8.5333-9.6833
1.0719*sqrt(0.0417+0.0278)
-1.15/0.2825
qt(0.975, 58)
?t
?qt
pt(-4.0708, df = 58)
m_m <- mean(m)
m_f <- mean(f)
f <- c(9.2, 7.7, 11.9, 6.2, 9.0, 8.4, 6.9, 7.6, 7.4, 8.0, 9.9, 6.7, 8.4, 9.3, 9.1, 8.7, 9.2, 9.1, 8.4, 9.6, 7.7, 9.0, 9.0, 8.4)
m <- c(10.4, 8.9, 11.7, 12.0, 8.7, 9.4, 9.8, 9.0, 9.2, 9.7, 9.1, 8.8, 7.9, 9.9, 10.0, 10.1, 9.0, 11.4, 8.7, 9.6, 9.2, 9.7, 8.9, 9.2, 9.4, 9.7, 8.9, 9.3, 10.4, 11.9, 9.0, 12.0, 9.6, 9.2, 9.9, 9.0)
#lengths
n_m <- length(m)
n_f <- length(f)
#y-bars/x-bars
m_m <- mean(m)
m_f <- mean(f)
#variances
v_f <- sd(f)^2
v_m <- sd(m)^2
#standard deviations
sd_f <- sd(f)
sd_m <- sd(m)
#standard deviation of the population?
s_p <- sqrt((((length(m)-1)*sd(m)^2) + (length(f)-1)*sd(f)^2)/(length(m)+length(f) -1))
m_m
m_f
v_f
v_m
sqrt(n_f)
sqrt(n_m)
(1.4136/4.8990)+(1.0077)(6)
(1.4136/4.8990)+(1.0077/6)
2.0017*0.4565
-1.15-.9138
-1.15+0.9138
x <- 4.3, 4.6, 4.7, 5.1, 5.3, 5.8, 5.3, 5.4)
x <- c(4.3, 4.6, 4.7, 5.1, 5.3, 5.8, 5.3, 5.4)
y <- c(3.5, 3.8, 3.7, 3.9, 4.4, 4.7, 5.2, 4.4)
wilcox.test(x, y)
install.packages("lawstat")
library(lawstat)
17*14*13*12*11
130*129
26*26
26*26*26
676+17576
130*43*64
1/(50*49*48*47)
50!
factorial(50)
1225/factorial(50)
combn(x = 2, m = 50)
combn(x = 50, m = 2)
choose(90, 10)
x <- choose(20, 4)*choose(70,6)
x/choose(90,10)
x <- choose(4, 1)*choose(12,1)
x/choose(52,2)
x <- choose(4,1)^5
x/choose(52,5)
x*4/choose(52,5)
x*4^5/choose(52,5)
(364/365)^16
(364/365)^56
(364/365)^78
(364/365)^125
(364/365)^200
(364/365)^215
(364/365)^220
(364/365)^250
(364/365)^251
(364/365)^252
(364/365)^253
1-(364/365)^254
1-(364/365)^255
1-(364/365)^253
33.6-35
-1.4/9.2
-0.1522*sqrt(40)
qt(0.95, 9)
pt(1.833
)
?pt
pt(0.95, 9)
49.2030/30
1.4218/1.6401
1.4288/1.6401
Drug_1 <- c(18, 19, 20, 21, 22, 23, 18, 19, 20, 21)
Drug_2 <- c(18, 20, 16, 20, 21, 20, 18, 19, 17, 13)
Drug_3 <- c(21, 22, 17, 18, 22, 19, 21, 20, 18, 23)
?anova
anova(object = c(Drug_1, Drug_2, Drug_3))
blah <- data.frame(c(Drug_1,Drug_2))
blah<- cbind(blah, Drug_3)
anova(blah)
?ot
?pt
pt(0.9079, df = 9)
pt(1.7079, df = 9)
pt(1.722, df = 9)
1-pt(0.9079, 9)
?Chisquare
dchisq(167.3111, 149)
pchisq(167.3111, 149)
?Chisquare
1/1.53
qf(1-0.025, 90, 90)
pf(2.1188, 90, 90)
31.7716+14.9952
sqrt(46.7668)
-2.93/6.838626
pt(-0.4284, df = 3)
?data.fram
?data.frame
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight <- data.frame(c(wild, ranch, zoo))
View(weight)
?matrix
weight_m <- matrix(c(wild, ranch, zoo), nrow = nrow(wild), ncol = length(c(wild, ranch, zoo)), byrow = T)
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = nrow(wild), ncol = 3, byrow = T)
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = nrow(wild), ncol = 3, byrow = T)
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = nrow(wild), ncol = 3, byrow = F)
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
wild <- c(114.7, 1289, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(130.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
colnames(weight) <- c("wild", "ranch", "zoo")
wild <- c(114.7, 128.9, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(103.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
colnames(weight) <- c("wild", "ranch", "zoo")
levene.test(y = weight, location = "median")
library(lawstat)
levene.test(y = weight, location = "median")
library(reshape2)
weight <- weight %>%
mutate(Sample = 1:8) %>%
order(Sample, wild, ranch, zoo)
library(tidyverse)
library(tidyverse)
weight <- weight %>%
mutate(Sample = 1:8) %>%
order(Sample, wild, ranch, zoo)
weight <- weight %>%
mutate(Sample = 1:8)
melted_weight <- melt(weight, id.vars = Sample)
melted_weight <- melt(weight, id.vars = Sample, measure.vars = c(wild, ranch, zoo))
?melt
melted_weight <- melt(weight, id = Sample, measure.vars = c(wild, ranch, zoo))
melted_weight <- melt(weight, id = weight$Sample, measure.vars = c(wild, ranch, zoo))
library(lawstat)
library(reshape2)
library(tidyverse)
wild <- c(114.7, 128.9, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(103.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
colnames(weight) <- c("wild", "ranch", "zoo")
weight <- melt(weight)
library(lawstat)
library(reshape2)
library(tidyverse)
wild <- c(114.7, 128.9, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(103.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
colnames(weight) <- c("wild", "ranch", "zoo")
weight <- melt(weight)
levene.test(y = weight[, value], group = weight[, variable], location = "median")
library(lawstat)
library(reshape2)
library(tidyverse)
wild <- c(114.7, 128.9, 111.5, 116.4, 134.5, 126.7, 120.6, 129.59)
ranch <- c(120.4, 91.0, 119.6, 119.4, 150.0, 169.7, 100.9, 76.1)
zoo <- c(103.1, 90.7, 129.5, 75.8, 182.5, 76.8, 87.3, 77.3)
weight_m <- matrix(c(wild, ranch, zoo), nrow = 8, ncol = 3, byrow = F)
weight <- data.frame(weight_m)
colnames(weight) <- c("wild", "ranch", "zoo")
weight <- melt(weight)
levene.test(y = weight$value, group = weight$variable, location = "median")
f <- (53.77^2)/(36.94^2)
sqrt((1.58*f))
sqrt((1/1.58)*f)
7(1.8^2)/40 - (1.8^4)/80
7*(1.8^2)/40 - (1.8^4)/80
0.0643/0.875
kk <- (53.77^2)/(91)
kk
jj <- (36.94^2)/(91)
jj
kk^2/90
jj^2/90
31.7716+14.9952
11.2159+2.4984
46.7668/13.7143
kk <- (53.77^2)/(91)
kk
jj <- (36.94^2)/(91)
jj
(kk^2)/90
(jj^2)/90
31.7716+14.9952
11.2159+2.4984
46.7668/13.7143
(kk^2)/90
(jj^2)/90
31.7716+14.9952
11.2159+2.4984
53.77^2/91
36.94^2/91
31.7716+14.9952
31.7716^2/90
14.9952^2/90
46.7668/(11.2159+2.484)
(46.7668/13.7143)^2
qchisq((1-0.05/2), 149)
qchisq((0.05/2), 149)
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(rbind(su1, su2, su3, su4, su5)))
lenses_dat
?as.matrix
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
lenses_dat
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
rownames(lenses_dat) <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
lenses_dat
str(lenses_dat)
gather_lenses <- gather(data = lenses_dat, key = "supplier", value = "lov")
library(tidyverse)
library(grid)
library(gridExtra)
library(kableExtra)
gather_lenses <- gather(data = lenses_dat, key = "supplier", value = "lov")
gather_lenses
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- gather(data = lenses_dat, key = "supplier", value = "lov")
gather_lenses
?gather
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", key = "lov")
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", value = "lov")
gather_lenses
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", value = "lov" -Supplier)
gather_lenses
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", value = "lov", -Supplier)
gather_lenses
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", value = "lov", -Supplier)
gather_lenses$supplier <- factor(gather_lenses$supplier)
anova_lenses <- aov(lov ~ supplier, data = gather_lenses)
z <- quantile(anova_lenses$residuals[!is.na(anova_lenses$residuals)], c(0.25, 0.75))
w <- qnorm(c(0.25, 0.75))
slope = diff(z)/diff(w)
int <- z[1L] - slope*w[1L]
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
select(Supplier, Sample1, Sample2, Sample3, Sample4, Sample5) %>%
gather(key = "supplier", value = "lov", -Supplier)
gather_lenses$supplier <- factor(gather_lenses$supplier)
anova_lenses <- aov(lov ~ supplier, data = gather_lenses)
z <- quantile(anova_lenses$residuals[!is.na(anova_lenses$residuals)], c(0.25, 0.75))
w <- qnorm(c(0.25, 0.75))
slope = diff(z)/diff(w)
int <- z[1L] - slope*w[1L]
norm_res_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$fitted.values, y = anova_lenses$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq_lenses <- ggplot(data = anova_lenses) + stat_qq(aes(sample = anova_lenses$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_lenses$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
setwd("C:/Users/Kyle.ligon/Desktop/Working Directory/Statistical Methods and Inference- UWF/STA5076/Chapter 8 and 9 Homework")
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
anova_lenses
anova_lenses$model
anova_lenses
163.238/4
anova_lenses$terms
anova_lenses$coefficients
anova_lenses$effects
anova_lenses$assign
anova_lenses$qr
summary(anova_lenses)
?kruskal.test
gather_lenses
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
anova_lenses
summary(anova_lenses)
---
title: "Chapter 8 And 9"
author: "Kyle Ligon"
date due: "March 18, 2018"
output: pdf_document
---
9.13 a) Checking the results from Proc Mixed in order to do ANOVA
```{r, message = FALSE, echo = FALSE}
library(tidyverse)
library(grid)
library(gridExtra)
library(kableExtra)
library(multcomp)
a1 <- c(12.4, 10.7, 11.9, 11.0, 12.4, 12.3, 13.0, 12.5, 11.2, 13.1)
a2 <- c(9.1, 11.5, 11.3, 9.7, 13.2, 10.7, 10.6, 11.3, 11.1, 11.7)
a3 <- c(8.5, 11.6, 10.2, 10.9, 9.0, 9.6, 9.9, 11.3, 10.5, 11.2)
a4 <- c(12.7, 13.2, 11.8, 11.9, 12.2, 11.2, 13.7, 11.8, 12.2, 11.7)
s <- c(8.7, 9.3, 8.2, 8.3, 9.0, 9.4, 9.2, 12.2, 8.5, 9.9)
data <- cbind(s, a1, a2, a3, a4)
frame <- data.frame(matrix(data, ncol = 5, nrow = 10, byrow = F))
colnames(frame) <- c("s", "a1", "a2", "a3", "a4")
gather_frame <- gather(data = frame, key = "treatment", value = "wt_loss")
gather_frame$treatment <- factor(gather_frame$treatment)
anova_mod <- aov(wt_loss ~ treatment, data = gather_frame)
y <- quantile(anova_mod$residuals[!is.na(anova_mod$residuals)], c(0.25, 0.75))
x <- qnorm(c(0.25, 0.75))
slope = diff(y)/diff(x)
int <- y[1L] - slope*x[1L]
norm_res <- ggplot(data = anova_mod, aes(x = anova_mod$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter <- ggplot(data = anova_mod, aes(x = anova_mod$fitted.values, y = anova_mod$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq <- ggplot(data = anova_mod) + stat_qq(aes(sample = anova_mod$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_mod$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter, norm_res, qq, nrow = 2, ncol = 2)
```
9.13 b) Perform ANOVA test on the data: Show ANOVA Table First, then Run the Test
```{r}
anova_mod
summary(anova_mod)
```
9.13 c) Perform Tukey's W on the significant pairs
```{r}
real_w <- TukeyHSD(anova_mod, ordered = TRUE)
real_w$treatment
plot(real_w)
```
9.13 d) Use Dunnett's to see if any of the new agents have significantly larger mean weights loss as compared to the standard agent.  alpha = 0.05
```{r, echo = FALSE}
Dunnett <- glht(anova_mod, linfct = mcp(treatment = c("a1-s=0",
"a2-s=0",
"a3-s=0",
"a4-s=0")))
summary(Dunnett)
```
```{r, echo = FALSE}
su1 <- c(191.9, 189.1, 190.9, 183.8, 185.5, 190.9, 192.8, 188.4, 189.0)
su2 <- c(178.2, 174.1, 170.3, 171.6, 171.7, 174.7, 176.0, 176.6, 172.8)
su3 <- c(156.6, 158.4, 157.7, 154.1, 152.3, 161.5, 158.1, 150.9, 156.9)
su4 <- c(125.8, 132.4, 132.2, 133.0, 133.2, 125.9, 132.9, 142.6, 135.5)
su5 <- c(218.6, 208.4, 187.1, 199.5, 202.0, 211.1, 197.6, 204.4, 206.8)
lenses_dat <- data.frame(matrix(c(su1, su2, su3, su4, su5), nrow = 5, ncol = 9, byrow = TRUE))
colnames(lenses_dat) <- c("Sample1", "Sample2", "Sample3", "Sample4", "Sample5", "Sample6", "Sample7", "Sample8", "Sample9")
lenses_dat$Supplier <- c("Supplier1", "Supplier2", "Supplier3", "Supplier4", "Supplier5")
gather_lenses <- lenses_dat %>%
gather(key = "sample", value = "lov", -Supplier)
gather_lenses$Supplier <- factor(gather_lenses$Supplier)
anova_lenses <- aov(lov ~ Supplier, data = gather_lenses)
z <- quantile(anova_lenses$residuals[!is.na(anova_lenses$residuals)], c(0.25, 0.75))
w <- qnorm(c(0.25, 0.75))
slope = diff(z)/diff(w)
int <- z[1L] - slope*w[1L]
norm_res_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$residuals)) + geom_histogram(bins = 6) + xlab("Residuals") + ggtitle("Residuals")
resid_jitter_lenses <- ggplot(data = anova_lenses, aes(x = anova_lenses$fitted.values, y = anova_lenses$residuals)) + geom_jitter() +  xlab("Group Mean") + ylab("Residuals") + ggtitle("Residuals vs. Predicted Mean")
qq_lenses <- ggplot(data = anova_lenses) + stat_qq(aes(sample = anova_lenses$residuals), alpha = 0.5) +
geom_abline(slope = slope, intercept = int, color = "blue") + ggtitle("Q-Q Plot")
res_sum <- as.table(summary(anova_lenses$residuals), nrow= 2, ncol = 6)
grid.arrange(resid_jitter_lenses, norm_res_lenses, qq_lenses, nrow = 2, ncol = 2)
```
b) Perform an Anova
```{r}
anova_lenses
summary(anova_lenses)
```
```{r, echo = FALSE}
#kruskal.test(gather_lenses$lov)
?kruskal.test
kruskal.test(x = gather_lenses$lov, g = gather_lenses$Supplier)
